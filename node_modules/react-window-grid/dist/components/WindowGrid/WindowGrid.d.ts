import * as React from 'react';
import { ClassNames } from '../../hooks/useClassNames';
import { ThemeFunction } from '../../hooks/useTheme';
declare enum FillerType {
    NONE = "none",
    APPEND = "append",
    STRETCH = "stretch",
    SHRINK = "shrink"
}
declare type ChildProp = {
    rowIndex: number;
    columnIndex: number;
    className: string;
    style: any;
    [key: number]: any;
};
declare type WindowGridProps = {
    scrollTop?: number;
    scrollLeft?: number;
    width?: number;
    height?: number;
    maxHeight?: number;
    columnCount: number;
    columnWidth: number | Function;
    rowCount: number;
    rowHeight: number | Function;
    fixedTopCount?: number;
    fixedLeftCount?: number;
    fixedRightCount?: number;
    fixedBottomCount?: number;
    overscanCount?: number;
    overscanDirection?: 'forward' | 'both';
    fillerColumn?: FillerType | string;
    fillerRow?: FillerType | string;
    /** 스크롤되는 뷰포트 너비가 특정값 이하로 떨어지면 fixedColumn 이 무효화된다. */
    minVisibleScrollViewWidth?: number;
    minVisibleScrollViewHeight?: number;
    containerStyle?: any;
    guideline?: boolean;
    classNames?: ClassNames;
    theme?: ThemeFunction;
    scrollSnap?: boolean;
    onScroll?: Function;
    onResize?: Function;
    onVisibleRangeChange?: Function;
    defaultRowIndex?: number;
    defaultColumnIndex?: number;
    overflow?: boolean;
    children?: (params: ChildProp) => JSX.Element | Element;
};
declare const _default: React.ForwardRefExoticComponent<WindowGridProps & React.RefAttributes<unknown>>;
export default _default;
